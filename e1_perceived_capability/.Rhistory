size=.25, color="black", width=.75) +
geom_signif(
y_position = c(6, 6, 6.5), xmin = c("Autopilot", "Copilot", "Autopilot"), xmax = c("Copilot", "Driverless", "Driverless"),
annotation = c("*","*","*"), tip_length = 0.1, color='black', size = .25, textsize = 2
) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5, face = "bold")) +
ggtitle("Perceived Automation")
dv <- "Perceived Automation"
y_pos <- c(6, 6, 6.5)
signif <- c("*","*","*")
titulo <- "Perceived Automation"
d_plot <- d_plot |>
filter(Measure == dv)
ggplot(data = d_plot, aes(x=Condition, y=Mean)) +
geom_bar(stat="identity", alpha=.75) +
geom_point(size=.75, color="black") +
geom_errorbar(aes(ymin=Mean-(SE*se_width), ymax=Mean+(SE*se_width)), position = "dodge",
size=.25, color="black", width=.75) +
geom_signif(
y_position = y_pos, xmin = c("Autopilot", "Copilot", "Autopilot"), xmax = c("Copilot", "Driverless", "Driverless"),
annotation = signif, tip_length = 0.1, color='black', size = .25, textsize = 2
) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5, face = "bold")) +
ggtitle(titulo)
plot_bar <- function(df=d_plot, dv, y_pos, signif=c("*","*","*"), titulo) {
d_plot <- d_plot |>
filter(Measure == dv)
ggplot(data = d_plot, aes(x=Condition, y=Mean)) +
geom_bar(stat="identity", alpha=.75) +
geom_point(size=.75, color="black") +
geom_errorbar(aes(ymin=Mean-(SE*se_width), ymax=Mean+(SE*se_width)), position = "dodge",
size=.25, color="black", width=.75) +
geom_signif(
y_position = y_pos, xmin = c("Autopilot", "Copilot", "Autopilot"), xmax = c("Copilot", "Driverless", "Driverless"),
annotation = signif, tip_length = 0.1, color='black', size = .25, textsize = 2
) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5, face = "bold")) +
ggtitle(titulo) -> p
return(p)
}
plot_bar <- function(df=d_plot, dv, y_pos, signif=c("*","*","*"), titulo) {
d_plot <- d_plot |>
filter(Measure == dv)
ggplot(data = d_plot, aes(x=Condition, y=Mean)) +
geom_bar(stat="identity", alpha=.75) +
geom_point(size=.75, color="black") +
geom_errorbar(aes(ymin=Mean-(SE*se_width), ymax=Mean+(SE*se_width)), position = "dodge",
size=.25, color="black", width=.75) +
geom_signif(
y_position = y_pos, xmin = c("Autopilot", "Copilot", "Autopilot"), xmax = c("Copilot", "Driverless", "Driverless"),
annotation = signif, tip_length = 0.1, color='black', size = .25, textsize = 2
) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5, face = "bold")) +
ggtitle(titulo) -> p
return(p)
}
dv <- "Perceived Automation"
y_pos <- c(6, 6, 6.5)
signif <- c("*","*","*")
titulo <- "Perceived Automation"
plot_bar(dv = "Perceived Automation", y_pos = y_pos,
signif = signif, titulo = titulo)
p1 <- ggplot(d_merged,aes(x=factor(cond),y=auto)) +
theme_bw() +coord_cartesian(ylim=c(1,6.8))+scale_y_continuous(breaks = scales::pretty_breaks(n = 3))+
geom_signif(comparisons = list(c("auto", "dless"),c("auto", "co"),c("co","dless")),map_signif_level=TRUE, y_position = c(6.5, 6, 6), textsize = 3.5)
p1
p1 <- p1 + theme(text = element_text(size=18),panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
scale_x_discrete(labels=t_names) +
ggtitle("Perceived Level of Automation") +
xlab ("") + ylab ("") +
theme_classic() +
theme(axis.text.x = element_text(size=14)) +
theme(axis.text.y = element_text(size=14)) +
theme(plot.title = element_text(size=16, hjust=0.5, face = "bold")) +
geom_violin(width=0.9, alpha=0.38, size=0.75) +
geom_sina(alpha=0.6, size=0.95, color = "#999999") +
stat_summary(fun.data = "mean_se", color = "black",
size=0.4, fun.args = list(mult = 1),
position = position_dodge(width = 0.9)) +
stat_summary(fun.data = "mean_se", color = "black",
fun.args = list(mult = 1),
position = position_dodge(width = 0.9),
geom="errorbar", width = 0.2)
p1
plot_bar(dv = "Perceived Automation", y_pos = y_pos,
signif = c("***", "***", "ns"), titulo = titulo)
plot_bar(dv = "Perceived Automation", y_pos = y_pos,
signif = c("***", "***", "ns"), titulo = "Perceived Level of Automation")
plot_bar(dv = "Perceived Automation", y_pos = c(6, 6, 6.5),
signif = c("***", "***", "ns"),
titulo = "Perceived Level of Automation")
p2 <- ggplot(d_merged,aes(x=factor(cond),y=use)) +
theme_bw() +coord_cartesian(ylim=c(1,110))+scale_y_continuous(breaks = scales::pretty_breaks(n = 3))+
geom_signif(comparisons = list(c("auto", "dless"),c("auto", "co"),c("co","dless")),map_signif_level=TRUE,y_position = c(107, 100, 100), textsize = 3.5)
p2 <- p2 + theme(text = element_text(size=18),panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
scale_x_discrete(labels=t_names)+
ggtitle("Ease of Use") +
xlab ("") + ylab ("") +
theme_classic() +
theme(axis.text.x = element_text(size=14)) +
theme(axis.text.y = element_text(size=14)) +
theme(plot.title = element_text(size=16, hjust=0.5, face = "bold")) +
geom_violin(width=0.9, alpha=0.38, size=0.75) +
geom_sina(alpha=0.6, size=0.95, color = "#999999") +
stat_summary(fun.data = "mean_se", color = "black",
size=0.4, fun.args = list(mult = 1),
position = position_dodge(width = 0.9)) +
stat_summary(fun.data = "mean_se", color = "black",
fun.args = list(mult = 1),
position = position_dodge(width = 0.9),
geom="errorbar", width = 0.2)
p2
## (3) Use 1- Rate how easy it is to learn how to drive
p3 <- ggplot(d_merged,aes(x=factor(cond),y=use1)) +
theme_bw() +coord_cartesian(ylim=c(1,110))+scale_y_continuous(breaks = scales::pretty_breaks(n = 3))+
geom_signif(comparisons = list(c("auto", "dless"),c("auto", "co"),c("co","dless")),map_signif_level=TRUE, y_position = c(107, 100, 100), textsize = 3.5)
p3 <- p3 + theme(text = element_text(size=18),panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
scale_x_discrete(labels=t_names)+
ggtitle("Learn to Drive") +
xlab ("") + ylab ("") +
theme_classic() +
theme(axis.text.x = element_text(size=14)) +
theme(axis.text.y = element_text(size=14)) +
theme(plot.title = element_text(size=16, hjust=0.5, face = "bold")) +
geom_violin(width=0.9, alpha=0.38, size=0.75) +
geom_sina(alpha=0.6, size=0.95, color = "#999999") +
stat_summary(fun.data = "mean_se", color = "black",
size=0.4, fun.args = list(mult = 1),
position = position_dodge(width = 0.9)) +
stat_summary(fun.data = "mean_se", color = "black",
fun.args = list(mult = 1),
position = position_dodge(width = 0.9),
geom="errorbar", width = 0.2)
p3
## (4) Use 2- Rate how easy it is to control
p4 <- ggplot(d_merged,aes(x=factor(cond),y=use2)) +
theme_bw() +coord_cartesian(ylim=c(1,110))+scale_y_continuous(breaks = scales::pretty_breaks(n = 3))+
geom_signif(comparisons = list(c("auto", "dless"),c("auto", "co"),c("co","dless")),map_signif_level=TRUE, y_position = c(107, 100, 100), textsize = 3.5)
p4 <- p4 + theme(text = element_text(size=18),panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
scale_x_discrete(labels=t_names)+
ggtitle("Easy to Control") +
xlab ("") + ylab ("") +
theme_classic() +
theme(axis.text.x = element_text(size=14)) +
theme(axis.text.y = element_text(size=14)) +
theme(plot.title = element_text(size=16, hjust=0.5, face = "bold")) +
geom_violin(width=0.9, alpha=0.38, size=0.75) +
geom_sina(alpha=0.6, size=0.95, color = "#999999") +
stat_summary(fun.data = "mean_se", color = "black",
size=0.4, fun.args = list(mult = 1),
position = position_dodge(width = 0.9)) +
stat_summary(fun.data = "mean_se", color = "black",
fun.args = list(mult = 1),
position = position_dodge(width = 0.9),
geom="errorbar", width = 0.2)
p4
## (5) Use 3- Rate how easy it is to understand
p5 <- ggplot(d_merged,aes(x=factor(cond),y=use3)) +
theme_bw() +coord_cartesian(ylim=c(1,110))+scale_y_continuous(breaks = scales::pretty_breaks(n = 3))+
geom_signif(comparisons = list(c("auto", "dless"),c("auto", "co"),c("co","dless")),map_signif_level=TRUE, y_position = c(107, 100, 100), textsize = 3.5)
p5 <- p5 + theme(text = element_text(size=18),panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
scale_x_discrete(labels=t_names)+
ggtitle("Easy to Understand") +
xlab ("") + ylab ("") +
theme_classic() +
theme(axis.text.x = element_text(size=14)) +
theme(axis.text.y = element_text(size=14)) +
theme(plot.title = element_text(size=16, hjust=0.5, face = "bold")) +
geom_violin(width=0.9, alpha=0.38, size=0.75) +
geom_sina(alpha=0.6, size=0.95, color = "#999999") +
stat_summary(fun.data = "mean_se", color = "black",
size=0.4, fun.args = list(mult = 1),
position = position_dodge(width = 0.9)) +
stat_summary(fun.data = "mean_se", color = "black",
fun.args = list(mult = 1),
position = position_dodge(width = 0.9),
geom="errorbar", width = 0.2)
p5
## (6) Use 4- Rate how easy it is to misunderstand/misinterpret
p6 <- ggplot(d_merged,aes(x=factor(cond),y=use4)) +
theme_bw() +coord_cartesian(ylim=c(1,110))+scale_y_continuous(breaks = scales::pretty_breaks(n = 3))+
geom_signif(comparisons = list(c("auto", "dless"),c("auto", "co"),c("co","dless")),map_signif_level=TRUE, y_position = c(107, 100, 100), textsize = 3.5)
p6 <- p6 + theme(text = element_text(size=18),panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
scale_x_discrete(labels=t_names)+
ggtitle("Easy to Misunderstand") +
xlab ("") + ylab ("") +
theme_classic() +
theme(axis.text.x = element_text(size=14)) +
theme(axis.text.y = element_text(size=14)) +
theme(plot.title = element_text(size=16, hjust=0.5, face = "bold")) +
geom_violin(width=0.9, alpha=0.38, size=0.75) +
geom_sina(alpha=0.6, size=0.95, color = "#999999") +
stat_summary(fun.data = "mean_se", color = "black",
size=0.4, fun.args = list(mult = 1),
position = position_dodge(width = 0.9)) +
stat_summary(fun.data = "mean_se", color = "black",
fun.args = list(mult = 1),
position = position_dodge(width = 0.9),
geom="errorbar", width = 0.2)
p6
## (7) Perceived value
p7 <- ggplot(d_merged,aes(x=factor(cond),y=value)) +
theme_bw() +coord_cartesian(ylim=c(1,110))+scale_y_continuous(breaks = scales::pretty_breaks(n = 3))+
geom_signif(comparisons = list(c("auto", "dless"),c("auto", "co"),c("co","dless")),map_signif_level=TRUE, y_position = c(107, 100, 100), textsize = 3.5)
p7 <- p7 + theme(text = element_text(size=18),panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
scale_x_discrete(labels=t_names)+
ggtitle("Perceived Value") +
xlab ("") + ylab ("") +
theme_classic() +
theme(axis.text.x = element_text(size=14)) +
theme(axis.text.y = element_text(size=14)) +
theme(plot.title = element_text(size=16, hjust=0.5, face = "bold")) +
geom_violin(width=0.9, alpha=0.38, size=0.75) +
geom_sina(alpha=0.6, size=0.95, color = "#999999") +
stat_summary(fun.data = "mean_se", color = "black",
size=0.4, fun.args = list(mult = 1),
position = position_dodge(width = 0.9)) +
stat_summary(fun.data = "mean_se", color = "black",
fun.args = list(mult = 1),
position = position_dodge(width = 0.9),
geom="errorbar", width = 0.2)
p7
## (8) Value 1- Rate the quality
p8 <- ggplot(d_merged,aes(x=factor(cond),y=value1)) +
theme_bw() +coord_cartesian(ylim=c(1,110))+scale_y_continuous(breaks = scales::pretty_breaks(n = 3))+
geom_signif(comparisons = list(c("auto", "dless"),c("auto", "co"),c("co","dless")),map_signif_level=TRUE, y_position = c(107, 100, 100), textsize = 3.5)
p8 <- p8 + theme(text = element_text(size=18),panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
scale_x_discrete(labels=t_names)+
ggtitle("Quality") +
xlab ("") + ylab ("") +
theme_classic() +
theme(axis.text.x = element_text(size=14)) +
theme(axis.text.y = element_text(size=14)) +
theme(plot.title = element_text(size=16, hjust=0.5, face = "bold")) +
geom_violin(width=0.9, alpha=0.38, size=0.75) +
geom_sina(alpha=0.6, size=0.95, color = "#999999") +
stat_summary(fun.data = "mean_se", color = "black",
size=0.4, fun.args = list(mult = 1),
position = position_dodge(width = 0.9)) +
stat_summary(fun.data = "mean_se", color = "black",
fun.args = list(mult = 1),
position = position_dodge(width = 0.9),
geom="errorbar", width = 0.2)
p8
## (9) Value 2- Rate how much you would enjoy driving
p9 <- ggplot(d_merged,aes(x=factor(cond),y=value2)) +
theme_bw() +coord_cartesian(ylim=c(1,110))+scale_y_continuous(breaks = scales::pretty_breaks(n = 3))+
geom_signif(comparisons = list(c("auto", "dless"),c("auto", "co"),c("co","dless")),map_signif_level=TRUE, y_position = c(107, 100, 100), textsize = 3.5)
p9 <- p9 + theme(text = element_text(size=18),panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
scale_x_discrete(labels=t_names)+
ggtitle("Enjoyment") +
xlab ("") + ylab ("") +
theme_classic() +
theme(axis.text.x = element_text(size=14)) +
theme(axis.text.y = element_text(size=14)) +
theme(plot.title = element_text(size=16, hjust=0.5, face = "bold")) +
geom_violin(width=0.9, alpha=0.38, size=0.75) +
geom_sina(alpha=0.6, size=0.95, color = "#999999") +
stat_summary(fun.data = "mean_se", color = "black",
size=0.4, fun.args = list(mult = 1),
position = position_dodge(width = 0.9)) +
stat_summary(fun.data = "mean_se", color = "black",
fun.args = list(mult = 1),
position = position_dodge(width = 0.9),
geom="errorbar", width = 0.2)
p9
## (10) Value 3- Rate how much it would improve your social standing/impression
p10 <- ggplot(d_merged,aes(x=factor(cond),y=value3)) +
theme_bw() +coord_cartesian(ylim=c(1,110))+scale_y_continuous(breaks = scales::pretty_breaks(n = 3))+
geom_signif(comparisons = list(c("auto", "dless"),c("auto", "co"),c("co","dless")),map_signif_level=TRUE, y_position = c(107, 100, 100), textsize = 3.5)
p10 <- p10 + theme(text = element_text(size=18),panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
scale_x_discrete(labels=t_names)+
ggtitle("Social Standing Improvement") +
xlab ("") + ylab ("") +
theme_classic() +
theme(axis.text.x = element_text(size=14)) +
theme(axis.text.y = element_text(size=14)) +
theme(plot.title = element_text(size=16, hjust=0.5, face = "bold")) +
geom_violin(width=0.9, alpha=0.38, size=0.75) +
geom_sina(alpha=0.6, size=0.95, color = "#999999") +
stat_summary(fun.data = "mean_se", color = "black",
size=0.4, fun.args = list(mult = 1),
position = position_dodge(width = 0.9)) +
stat_summary(fun.data = "mean_se", color = "black",
fun.args = list(mult = 1),
position = position_dodge(width = 0.9),
geom="errorbar", width = 0.2)
p10
p11 <- ggplot(d_merged,aes(x=factor(cond),y=value4)) +
theme_bw() + coord_cartesian(ylim=c(10000,115000))+scale_y_continuous(breaks = scales::pretty_breaks(n = 8)) + geom_signif(comparisons = list(c("auto", "dless"),c("auto", "co"),c("co","dless")),map_signif_level=TRUE, y_position = c(107000, 100000, 100000), textsize = 3.5)
p11 <- p11 + theme(text = element_text(size=18),panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
scale_x_discrete(labels=t_names)+
ggtitle("Fair Price") +
xlab ("") + ylab ("") +
theme_classic() +
theme(axis.text.x = element_text(size=14)) +
theme(axis.text.y = element_text(size=14)) +
theme(plot.title = element_text(size=16, hjust=0.5, face = "bold")) +
geom_violin(width=0.9, alpha=0.38, size=0.75) +
geom_sina(alpha=0.6, size=0.95, color = "#999999") +
stat_summary(fun.data = "mean_se", color = "black",
size=0.4, fun.args = list(mult = 1),
position = position_dodge(width = 0.9)) +
stat_summary(fun.data = "mean_se", color = "black",
fun.args = list(mult = 1),
position = position_dodge(width = 0.9),
geom="errorbar", width = 0.2)
p11
p2
View(d_plot)
# BAR PLOTS
d_merged |>
select(cond, auto, use1, use2, use3, use4, value1, value2, value3, value4) -> d_plot
colnames(d_plot) <- c("Condition", "Perceived Automation", "Learn", "Control", "Understand", "Misinterpret", "Quality", "Enjoyment", "Social Standing", "Price")
d_plot |>
gather(key = "Measure", value = "Response" , 2:10) |>
mutate(
Condition = case_when(
Condition == "co" ~ "Copilot",
Condition == "auto" ~ "Autopilot",
Condition == "dless" ~ "Driverless",
)
) |>
group_by(Condition, Measure) |>
summarize(
Mean = mean(Response),
SE = sd(Response)/sqrt(n())
) -> d_plot
View(d_plot)
View(d_plot)
plot_bar(dv = "Control", y_pos = c(6, 6, 6.5),
signif = c("ns", "*", "ns"),
titulo = "Ease of Use")
plot_bar(dv = "Control", y_pos = c(70, 70, 75),
signif = c("ns", "*", "ns"),
titulo = "Ease of Use")
plot_bar(dv = "Control", y_pos = c(80, 80, 85),
signif = c("ns", "*", "ns"),
titulo = "Ease of Use")
plot_bar(dv = "Control", y_pos = c(80, 80, 85),
signif = c("ns", "*", "ns"),
titulo = "Ease of Use")
p3
plot_bar(dv = "Learn", y_pos = c(110, 110, 120),
signif = c("ns", "*", "ns"),
titulo = "Learn to Drive")
p3
plot_bar(dv = "Learn", y_pos = c(75, 75, 80),
signif = c("ns", "*", "ns"),
titulo = "Learn to Drive")
p3
p4
View(d_plot)
p6
p6
p7
p8
p9
p10
p11
plot_bar(dv = "Misunderstand", y_pos = c(80, 80, 85),
signif = c("ns", "*", "ns"),
titulo = "Ease of Use")
View(d_plot)
plot_bar(dv = "Misinterpret", y_pos = c(80, 80, 85),
signif = c("ns", "*", "ns"),
titulo = "Ease of Use")
p4
p5
p6
plot_bar(dv = "Misinterpret", y_pos = c(80, 80, 85),
signif = c("**", "ns", "**"),
titulo = "Ease of Misinterpretation")
plot_bar(dv = "Misinterpret", y_pos = c(80, 80, 85),
signif = c("**", "**", "ns"),
titulo = "Ease of Misinterpretation")
ggplot(data = d_plot, aes(x=Condition, y=Mean)) +
geom_bar(stat="identity", alpha=.75) +
geom_point(size=.75, color="black") +
geom_errorbar(aes(ymin=Mean-(SE*se_width), ymax=Mean+(SE*se_width)), position = "dodge",
size=.25, color="black", width=.75) +
geom_signif(
y_position = y_pos, xmin = c("Autopilot", "Copilot", "Autopilot"), xmax = c("Copilot", "Driverless", "Driverless"),
annotation = signif, tip_length = 0.1, color='black', size = .25, textsize = 2
) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5, face = "bold")) +
ggtitle(titulo) +
xlab("Response") -> p
plot_bar <- function(df=d_plot, dv, y_pos, signif=c("*","*","*"), titulo) {
d_plot <- d_plot |>
filter(Measure == dv)
ggplot(data = d_plot, aes(x=Condition, y=Mean)) +
geom_bar(stat="identity", alpha=.75) +
geom_point(size=.75, color="black") +
geom_errorbar(aes(ymin=Mean-(SE*se_width), ymax=Mean+(SE*se_width)), position = "dodge",
size=.25, color="black", width=.75) +
geom_signif(
y_position = y_pos, xmin = c("Autopilot", "Copilot", "Autopilot"), xmax = c("Copilot", "Driverless", "Driverless"),
annotation = signif, tip_length = 0.1, color='black', size = .25, textsize = 2
) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5, face = "bold")) +
ggtitle(titulo) +
xlab("Response") -> p
return(p)
}
plot_bar(dv = "Perceived Automation", y_pos = c(6, 6, 6.5),
signif = c("***", "***", "ns"),
titulo = "Perceived Level of Automation")
plot_bar(dv = "Misinterpret", y_pos = c(80, 80, 85),
signif = c("**", "**", "ns"),
titulo = "Ease of Misinterpretation")
plot_bar(dv = "Perceived Automation", y_pos = c(6, 6, 6.5),
signif = c("***", "***", "ns"),
titulo = "Perceived Level of Automation")
plot_bar(dv = "Misinterpret", y_pos = c(80, 80, 85),
signif = c("**", "**", "ns"),
titulo = "Ease of Misinterpretation")
ggplot(data = d_plot, aes(x=Condition, y=Mean)) +
geom_bar(stat="identity", alpha=.75) +
geom_point(size=.75, color="black") +
geom_errorbar(aes(ymin=Mean-(SE*se_width), ymax=Mean+(SE*se_width)), position = "dodge",
size=.25, color="black", width=.75) +
geom_signif(
y_position = y_pos, xmin = c("Autopilot", "Copilot", "Autopilot"), xmax = c("Copilot", "Driverless", "Driverless"),
annotation = signif, tip_length = 0.1, color='black', size = .25, textsize = 2
) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5, face = "bold")) +
ggtitle(titulo) +
ylab("Response") -> p
return(p)
plot_bar <- function(df=d_plot, dv, y_pos, signif=c("*","*","*"), titulo) {
d_plot <- d_plot |>
filter(Measure == dv)
ggplot(data = d_plot, aes(x=Condition, y=Mean)) +
geom_bar(stat="identity", alpha=.75) +
geom_point(size=.75, color="black") +
geom_errorbar(aes(ymin=Mean-(SE*se_width), ymax=Mean+(SE*se_width)), position = "dodge",
size=.25, color="black", width=.75) +
geom_signif(
y_position = y_pos, xmin = c("Autopilot", "Copilot", "Autopilot"), xmax = c("Copilot", "Driverless", "Driverless"),
annotation = signif, tip_length = 0.1, color='black', size = .25, textsize = 2
) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5, face = "bold")) +
ggtitle(titulo) +
ylab("Response") -> p
return(p)
}
plot_bar(dv = "Perceived Automation", y_pos = c(6, 6, 6.5),
signif = c("***", "***", "ns"),
titulo = "Perceived Level of Automation")
plot_bar(dv = "Perceived Automation", y_pos = c(6, 6, 6.5),
signif = c("***", "***", "ns"),
titulo = "Perceived Level of Automation")
plot_bar(dv = "Misinterpret", y_pos = c(80, 80, 85),
signif = c("**", "**", "ns"),
titulo = "Ease of Misinterpretation")
plot_bar(dv = "Perceived Automation", y_pos = c(6, 6, 6.5),
signif = c("***", "***", "ns"),
titulo = "Perceived Level of Automation") -> a1
plot_bar(dv = "Misinterpret", y_pos = c(80, 80, 85),
signif = c("**", "**", "ns"),
titulo = "Ease of Misinterpretation") -> a2
ggarrange(a1,a2)
p5
p6
p6
# BAR PLOTS
d_merged |>
select(cond, auto, use1, use2, use3, use4, value1, value2, value3, value4) -> d_plot
d <- d_plot
# BAR PLOTS
d_merged |>
select(cond, auto, use1, use2, use3, use4, value1, value2, value3, value4) -> d_plot
colnames(d_plot) <- c("Condition", "Perceived Automation", "Learn", "Control", "Understand", "Misinterpret", "Quality", "Enjoyment", "Social Standing", "Price")
d <- d_plot
t.test(d[d$cond == "auto",]$Misinterpret,
d[d$cond == "dless",]$Misinterpret, )
t.test(d[d$cond == "auto",]$Misinterpret,
d[d$cond == "dless",]$Misinterpret )
View(d)
d[d$cond == "auto",]$Misinterpret
t.test(d[d$Condition == "auto",]$Misinterpret,
d[d$Condition == "dless",]$Misinterpret )
t.test(d[d$Condition == "auto",]$Misinterpret,
d[d$Condition == "co",]$Misinterpret )
t.test(d[d$Condition == "co",]$Misinterpret,
d[d$Condition == "dless",]$Misinterpret )
t.test(d[d$Condition == "auto",]$Misinterpret,
d[d$Condition == "dless",]$Misinterpret )
plot_bar(dv = "Perceived Automation", y_pos = c(6, 6, 6.5),
signif = c("***", "***", "ns"),
titulo = "Perceived Level of Automation") -> a1
plot_bar(dv = "Misinterpret", y_pos = c(80, 80, 85),
signif = c("**", "**", "ns"),
titulo = "Ease of Misinterpretation") -> a2
ggarrange(a1,a2)
